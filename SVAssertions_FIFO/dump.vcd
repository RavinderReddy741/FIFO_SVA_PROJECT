$date
Thu Jan 18 12:15:38 2024
$end
$version
Riviera-PRO Version 2022.04.117.8517
$end
$timescale
1 ns
$end

$scope module tb $end
$var wire 8 ! dout [7:0] $end
$var wire 1 " empty $end
$var wire 1 # full $end
$var reg 1 $ clk $end
$var reg 1 % rst $end
$var reg 1 & wr $end
$var reg 1 ' rd $end
$var reg 8 ( din [7:0] $end
$var integer 32 ) i $end
$var reg 1 * start $end
$var reg 1 + temp $end

$scope module dut $end
$var wire 1 , clk $end
$var wire 1 - rst $end
$var wire 1 . wr $end
$var wire 1 / rd $end
$var wire 8 0 din [7:0] $end
$var reg 8 1 dout [7:0] $end
$var reg 1 2 empty $end
$var reg 1 3 full $end
$var reg 4 4 wptr [3:0] $end
$var reg 4 5 rptr [3:0] $end
$var reg 4 6 cnt [3:0] $end

$scope module dut2 $end
$var wire 1 , clk $end
$var wire 1 - rst $end
$var wire 1 . wr $end
$var wire 1 / rd $end
$var wire 8 0 din [7:0] $end
$var wire 8 ! dout [7:0] $end
$var wire 1 " empty $end
$var wire 1 # full $end
$upscope $end

$upscope $end


$scope task write $end
$upscope $end


$scope task read $end
$upscope $end

$upscope $end

$enddefinitions $end
$dumpvars
bx !
1"
0#
0$
0%
0&
0'
b0 (
b0 )
0*
0+
0,
0-
0.
0/
b0 0
bx 1
12
03
b0 4
b0 5
b0 6
$end
#2
1*
#5
1$
1,
1%
1-
#10
0$
0,
#12
0*
#15
1$
1,
1'
1/
#20
0$
0,
#25
1$
1,
0'
1&
1.
0/
#30
0$
0,
#35
1$
1,
1'
1/
#40
0$
0,
#45
1$
1,
0'
1&
0%
b11001 (
b11001 0
0-
0/
#50
0$
0,
#55
1$
1,
b1 )
b10000 (
b10000 0
b1 4
b1 6
02
0"
#60
0$
0,
#65
1$
1,
b10 )
b10000000 (
b10000000 0
b10 4
b10 6
#70
0$
0,
#75
1$
1,
b11 )
b10110010 (
b10110010 0
b11 4
b11 6
#80
0$
0,
#85
1$
1,
b100 )
b110011 (
b110011 0
b100 4
b100 6
#90
0$
0,
#95
1$
1,
b101 )
b10110010 (
b10110010 0
b101 4
b101 6
#100
0$
0,
#105
1$
1,
b110 )
b101101 (
b101101 0
b110 4
b110 6
#110
0$
0,
#115
1$
1,
b111 )
b110011 (
b110011 0
b111 4
b111 6
#120
0$
0,
#125
1$
1,
b1000 )
b11001111 (
b11001111 0
b1000 4
b1000 6
#130
0$
0,
#135
1$
1,
b1001 )
b11100110 (
b11100110 0
b1001 4
b1001 6
#140
0$
0,
#145
1$
1,
b1010 )
b10000111 (
b10000111 0
b1010 4
b1010 6
#150
0$
0,
#155
1$
1,
b1011 )
b100111 (
b100111 0
b1011 4
b1011 6
#160
0$
0,
#165
1$
1,
b1100 )
b10111000 (
b10111000 0
b1100 4
b1100 6
#170
0$
0,
#175
1$
1,
b1101 )
b11101111 (
b11101111 0
b1101 4
b1101 6
#180
0$
0,
#185
1$
1,
b1110 )
b10101110 (
b10101110 0
b1110 4
b1110 6
#190
0$
0,
#195
1$
1,
b1111 )
b1111 4
b1111 6
13
1#
#200
0$
0,
#205
1$
1,
b0 4
#210
0$
0,
#215
1$
1,
b0 )
0&
1'
1/
0.
#220
0$
0,
#225
1$
1,
b1 )
b11001 1
b1 5
b1110 6
03
0#
b11001 !
#230
0$
0,
#235
1$
1,
b10 )
b10000 1
b10 5
b1101 6
b10000 !
#240
0$
0,
#245
1$
1,
b11 )
b10000000 1
b11 5
b1100 6
b10000000 !
#250
0$
0,
#255
1$
1,
b100 )
b10110010 1
b100 5
b1011 6
b10110010 !
#260
0$
0,
#265
1$
1,
b101 )
b110011 1
b101 5
b1010 6
b110011 !
#270
0$
0,
#275
1$
1,
b110 )
b10110010 1
b110 5
b1001 6
b10110010 !
#280
0$
0,
#285
1$
1,
b111 )
b101101 1
b111 5
b1000 6
b101101 !
#290
0$
0,
#292
1+
#295
1$
1,
b1000 )
b110011 1
b1000 5
b111 6
b110011 !
#300
0$
0,
#302
0+
#305
1$
1,
b1001 )
b11001111 1
b1001 5
b110 6
b11001111 !
#310
0$
0,
#315
1$
1,
b1010 )
b11100110 1
b1010 5
b101 6
b11100110 !
#320
0$
0,
#325
1$
1,
b1011 )
b10000111 1
b1011 5
b100 6
b10000111 !
#330
0$
0,
#335
1$
1,
b1100 )
b100111 1
b1100 5
b11 6
b100111 !
#340
0$
0,
#345
1$
1,
b1101 )
b10111000 1
b1101 5
b10 6
b10111000 !
#350
0$
0,
#355
1$
1,
b1110 )
b11101111 1
b1110 5
b1 6
b11101111 !
#360
0$
0,
#365
1$
1,
b1111 )
b10101110 1
b1111 5
b0 6
12
1"
b10101110 !
#370
0$
0,
#375
1$
1,
b0 5
#380
0$
0,
#385
1$
1,
#390
0$
0,
#395
1$
1,
#400
0$
0,
#405
1$
1,
#410
0$
0,
#415
1$
1,
#420
0$
0,
#425
1$
1,
#430
0$
0,
#435
1$
1,
#440
0$
0,
#445
1$
1,
#450
0$
0,
#455
1$
1,
#460
0$
0,
#465
1$
1,
#470
0$
0,
#475
1$
1,
#480
0$
0,
#485
1$
1,
#490
0$
0,
#495
1$
1,
#500
